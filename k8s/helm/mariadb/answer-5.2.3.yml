global.imageRegistry: harbor.io/library
image.registry: harbor.io/library
image.repository: bitnami/mariadb
image.tag: 10.1.37
image.pullPolicy: IfNotPresent
db.user: admin
db.password: password123
db.name: admin
rootUser.password: MariaDBrootpwd456@
replication.password: MariaDBrepliacpwd789#
master.persistence.enabled: true
master.persistence.size: 1Gi
master.persistence.storageClass: "openebs-standalone"
replication.enabled: true
slave.replicas: '1'
slave.persistence.enabled: false
slave.persistence.size: 1Gi
slave.persistence.storageClass: ""
service.type: NodePort
service.nodePort.master: '30020'
service.nodePort.slave: '30021'
metrics.enabled: 'false'
metrics.image.registry: harbor.io/library
metrics.image.repository: prom/mysqld-exporter
metrics.image.tag: v0.10.0
metrics.image.pullPolicy: IfNotPresent


# 下述内容为完整内容，实际使用请使用上述内容作为yml
global.imageRegistry	Global Docker image registry	nil
image.registry	MariaDB image registry	docker.io
image.repository	MariaDB Image name	bitnami/mariadb
image.tag	MariaDB Image tag	{VERSION}
image.pullPolicy	MariaDB image pull policy	Always if imageTag is latest, else IfNotPresent
image.pullSecrets	Specify image pull secrets	nil (does not add image pull secrets to deployed pods)
service.type	Kubernetes service type	ClusterIP
service.clusterIp	Specific cluster IP when service type is cluster IP. Use None for headless service	nil
service.port	MySQL service port	3306
securityContext.enabled	Enable security context	true
securityContext.fsGroup	Group ID for the container	1001
securityContext.runAsUser	User ID for the container	1001
rootUser.password	Password for the root user	random 10 character alphanumeric string
rootUser.forcePassword	Force users to specify a password	false
db.user	Username of new user to create	nil
db.password	Password for the new user	random 10 character alphanumeric string if db.user is defined
db.name	Name for new database to create	my_database
replication.enabled	MariaDB replication enabled	true
replication.user	MariaDB replication user	replicator
replication.password	MariaDB replication user password	random 10 character alphanumeric string
master.annotations[].key	key for the the annotation list item	nil
master.annotations[].value	value for the the annotation list item	nil
master.affinity	Master affinity (in addition to master.antiAffinity when set)	{}
master.antiAffinity	Master pod anti-affinity policy	soft
master.tolerations	List of node taints to tolerate (master)	[]
master.persistence.enabled	Enable persistence using a PersistentVolumeClaim	true
master.persistence.existingClaim	Provide an existing PersistentVolumeClaim	nil
master.persistence.mountPath	Configure existing PersistentVolumeClaim mount path	""
master.persistence.annotations	Persistent Volume Claim annotations	{}
master.persistence.storageClass	Persistent Volume Storage Class	
master.persistence.accessModes	Persistent Volume Access Modes	[ReadWriteOnce]
master.persistence.size	Persistent Volume Size	8Gi
master.config	Config file for the MariaDB Master server	_default values in the values.yaml file_
master.resources	CPU/Memory resource requests/limits for master node	{}
master.livenessProbe.enabled	Turn on and off liveness probe (master)	true
master.livenessProbe.initialDelaySeconds	Delay before liveness probe is initiated (master)	120
master.livenessProbe.periodSeconds	How often to perform the probe (master)	10
master.livenessProbe.timeoutSeconds	When the probe times out (master)	1
master.livenessProbe.successThreshold	Minimum consecutive successes for the probe (master)	1
master.livenessProbe.failureThreshold	Minimum consecutive failures for the probe (master)	3
master.readinessProbe.enabled	Turn on and off readiness probe (master)	true
master.readinessProbe.initialDelaySeconds	Delay before readiness probe is initiated (master)	30
master.readinessProbe.periodSeconds	How often to perform the probe (master)	10
master.readinessProbe.timeoutSeconds	When the probe times out (master)	1
master.readinessProbe.successThreshold	Minimum consecutive successes for the probe (master)	1
master.readinessProbe.failureThreshold	Minimum consecutive failures for the probe (master)	3
slave.replicas	Desired number of slave replicas	1
slave.annotations[].key	key for the the annotation list item	nil
slave.annotations[].value	value for the the annotation list item	nil
slave.affinity	Slave affinity (in addition to slave.antiAffinity when set)	{}
slave.antiAffinity	Slave pod anti-affinity policy	soft
slave.tolerations	List of node taints to tolerate for (slave)	[]
slave.persistence.enabled	Enable persistence using a PersistentVolumeClaim	true
slave.persistence.annotations	Persistent Volume Claim annotations	{}
slave.persistence.storageClass	Persistent Volume Storage Class	
slave.persistence.accessModes	Persistent Volume Access Modes	[ReadWriteOnce]
slave.persistence.size	Persistent Volume Size	8Gi
slave.config	Config file for the MariaDB Slave replicas	_default values in the values.yaml file_
slave.resources	CPU/Memory resource requests/limits for slave node	{}
slave.livenessProbe.enabled	Turn on and off liveness probe (slave)	true
slave.livenessProbe.initialDelaySeconds	Delay before liveness probe is initiated (slave)	120
slave.livenessProbe.periodSeconds	How often to perform the probe (slave)	10
slave.livenessProbe.timeoutSeconds	When the probe times out (slave)	1
slave.livenessProbe.successThreshold	Minimum consecutive successes for the probe (slave)	1
slave.livenessProbe.failureThreshold	Minimum consecutive failures for the probe (slave)	3
slave.readinessProbe.enabled	Turn on and off readiness probe (slave)	true
slave.readinessProbe.initialDelaySeconds	Delay before readiness probe is initiated (slave)	45
slave.readinessProbe.periodSeconds	How often to perform the probe (slave)	10
slave.readinessProbe.timeoutSeconds	When the probe times out (slave)	1
slave.readinessProbe.successThreshold	Minimum consecutive successes for the probe (slave)	1
slave.readinessProbe.failureThreshold	Minimum consecutive failures for the probe (slave)	3
metrics.enabled	Start a side-car prometheus exporter	false
metrics.image.registry	Exporter image registry	docker.io
metrics.image.repository	Exporter image name	prom/mysqld-exporter
metrics.image.tag	Exporter image tag	v0.10.0
metrics.image.pullPolicy	Exporter image pull policy	IfNotPresent
metrics.resources	Exporter resource requests/limit	nil